{"version":3,"sources":["Components/Login/index.js","Components/Certificates/Search/index.js","Components/Certificates/ExpiresIn/index.js","Components/Certificates/CertificatesFalconGrid/Button/index.js","Components/Certificates/CertificatesFalconGrid/index.js","Components/Certificates/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","googleLoginBox","textAlignLast","marginBottom","googleLoginText","padding","Login","props","useState","email","setEmail","password","setPassword","classes","responseGoogle","response","accessToken","setAuth","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","onSubmit","event","preventDefault","alert","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","target","value","type","Button","color","Grid","item","xs","clientId","process","buttonText","onSuccess","onFailure","cookiePolicy","container","Link","href","root","borderRadius","input","marginLeft","flex","iconButton","divider","height","wrap","paddingRight","textAlign","Searchbar","Paper","IconButton","aria-label","InputBase","filterByName","placeholder","inputProps","bullet","transform","vermelho","amarelo","verde","indigo","ExpiresIn","ButtonGroup","onClick","filterByDays","GreenButton","withStyles","getContrastText","green","RedButton","red","YellowButton","yellow","IndigoButton","createMuiTheme","typography","fontSize","CustomizedButtons","hoje","Date","dias30","parseInt","getDate","dias60","dias90","dt30dias","setDate","dt60dias","dt90dias","certificate","expires_on","getTime","index","handleOpen","ThemeProvider","align","noWrap","Boolean","modal","justifyContent","background","boxShadow","shadows","card","minWidth","minHeight","titleModal","posModal","teste","paddingBottom","Certificates","certificates","setCertificates","modalCertificate","setModalCertificate","React","open","setOpen","param","currentTarget","useEffect","map","sm","lg","key","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","gutterBottom","status","toLocaleDateString","domains","button","filteredCertificates","setFilteredCertificates","fetchCertificates","year","a","axios","get","data","dias","dataFiltro","dataEpoch","filter","toUpperCase","includes","startIcon","sessionStorage","removeItem","window","location","reload","CertificatesFalconGrid","App","getItem","auth","setItem","path","exact","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa900f92.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    googleLoginBox: {\r\n        textAlignLast: 'center',\r\n        marginBottom: 20,\r\n    },\r\n    googleLoginText: {\r\n        padding: 10,\r\n    }\r\n}));\r\n  \r\nfunction Login(props) {\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const handleEmailChange = event => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = event => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!(email === 'email' && password === 'senha')){\r\n            alert('Login Failed!');\r\n        } else {\r\n            props.setAuth(true);\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const responseGoogle = (response) => {\r\n        if (response.accessToken) {\r\n          props.setAuth(response.accessToken);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Login\r\n                </Typography>\r\n\r\n                <form className={classes.form} onSubmit={handleLogin}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={handleEmailChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={handlePasswordChange}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <Grid item xs={12}>\r\n                        <div className={classes.googleLoginBox}>\r\n                            <Typography className={classes.googleLoginText} component=\"h3\">\r\n                                Or Login With Google\r\n                            </Typography>\r\n                            <GoogleLogin\r\n                                clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n                                buttonText=\"Login\"\r\n                                onSuccess={responseGoogle}\r\n                                onFailure={responseGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    borderRadius: '50px',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n  wrap: {\n    maxWidth: '800px',\n    padding: 10,\n    paddingRight: 20,\n    textAlign: 'center',\n    margin: '0 auto',\n    marginBottom: '50px',\n  }\n});\n\n\nexport default function Searchbar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrap}>\n      <Paper className={classes.root}>\n        <IconButton className={classes.iconButton} aria-label=\"Search\">\n          <SearchIcon />\n        </IconButton>\n        \n        <InputBase\n          className={classes.input}\n          onChange={props.filterByName}\n          placeholder='Find certificate'\n          inputProps={{ 'aria-label': 'Find certificate' }}\n        />\n      </Paper>\n    </div>\n  );\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    borderRadius: '50px',\r\n  },\r\n  wrap: {\r\n    padding: '20px 0 0 0'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 15px 0 0',\r\n    transform: 'scale(2.5)',\r\n  },\r\n  vermelho: {\r\n    color: '#f44336',\r\n  },\r\n  amarelo: {\r\n      color: '#fdff81',\r\n  },\r\n  verde: {\r\n      color: '#2cff46',\r\n  },\r\n  indigo: {\r\n    color: '#e8eaf6'\r\n  }\r\n});\r\n\r\nexport default function ExpiresIn(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.wrap}>\r\n        <ButtonGroup aria-label=\"outlined primary button group\">\r\n            <Button onClick={props.filterByDays} value={30}> <span className={classes.bullet + ' ' + classes.vermelho}>•</span> 30</Button>\r\n            <Button onClick={props.filterByDays} value={60}> <span className={classes.bullet + ' ' + classes.amarelo}>•</span> 60</Button>\r\n            <Button onClick={props.filterByDays} value={90}> <span className={classes.bullet + ' ' + classes.verde}>•</span> 90</Button>\r\n            <Button onClick={props.filterByDays} value={''}> <span className={classes.bullet + ' ' + classes.indigo}>•</span> ALL</Button>\r\n        </ButtonGroup>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { green, yellow, red, indigo } from '@material-ui/core/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst GreenButton = withStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(green[300]),\r\n        backgroundColor: green[300],\r\n        '&:hover': {\r\n            backgroundColor: green[500],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst RedButton = withStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(red[300]),\r\n        backgroundColor: red[300],\r\n        '&:hover': {\r\n            backgroundColor: red[500],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst YellowButton = withStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(yellow[300]),\r\n        backgroundColor: yellow[300],\r\n        '&:hover': {\r\n            backgroundColor: yellow[500],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst IndigoButton = withStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(indigo[50]),\r\n        backgroundColor: indigo[50],\r\n        '&:hover': {\r\n            backgroundColor: indigo[100],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n        width: '100%',\r\n        padding: 10,\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n      // Tell Material-UI what the font-size on the html element is.\r\n      fontSize:9.5,\r\n    },\r\n});\r\n\r\nexport default function CustomizedButtons(props) {\r\n    const classes = useStyles();\r\n\r\n    let hoje = new Date();\r\n    let dias30 = parseInt(hoje.getDate()) + parseInt(30);\r\n    let dias60 = parseInt(hoje.getDate()) + parseInt(60);\r\n    let dias90 = parseInt(hoje.getDate()) + parseInt(90);\r\n\r\n    let dt30dias = new Date();\r\n    dt30dias.setDate(dias30);\r\n\r\n    let dt60dias = new Date();\r\n    dt60dias.setDate(dias60);\r\n\r\n    let dt90dias = new Date();\r\n    dt90dias.setDate(dias90);\r\n\r\n    if(props.certificate.expires_on < dt30dias.getTime()){\r\n        return (\r\n            <RedButton variant=\"contained\" color=\"primary\" className={classes.margin} value={props.index} onClick={props.handleOpen}>\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography align='left' noWrap={Boolean(true)} > {props.certificate.name} </Typography>\r\n                </ThemeProvider>\r\n            </RedButton>\r\n            \r\n        );\r\n    } else if(props.certificate.expires_on < dt60dias.getTime()){\r\n        return (\r\n            <YellowButton variant=\"contained\" color=\"primary\" className={classes.margin} value={props.index} onClick={props.handleOpen}>\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography align='left' noWrap={Boolean(true)} > {props.certificate.name} </Typography>\r\n                </ThemeProvider>\r\n            </YellowButton>\r\n        );\r\n    } else if(props.certificate.expires_on < dt90dias.getTime()){\r\n        return (\r\n            <GreenButton variant=\"contained\" color=\"primary\" className={classes.margin} value={props.index} onClick={props.handleOpen}>\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography align='left' noWrap={Boolean(true)} > {props.certificate.name} </Typography>\r\n                </ThemeProvider>\r\n            </GreenButton>\r\n        );\r\n    } else {\r\n        return (\r\n            <IndigoButton variant=\"contained\" color=\"primary\" className={classes.margin} value={props.index} onClick={props.handleOpen}>\r\n               <ThemeProvider theme={theme}>\r\n                    <Typography align='left' noWrap={Boolean(true)} > {props.certificate.name} </Typography>\r\n                </ThemeProvider>\r\n            </IndigoButton>\r\n        );\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from './Button';\r\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n      // Tell Material-UI what the font-size on the html element is.\r\n      fontSize:9.5,\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    card: {\r\n        minWidth: '100%',\r\n        minHeight: '100%',\r\n        backgroundColor: '#EAEAEA',\r\n    },\r\n    titleModal: {\r\n        fontSize: '0.8rem',\r\n    },\r\n    posModal: {\r\n        marginBottom: 2,\r\n        fontSize: '0.7rem',\r\n    },\r\n    teste: {\r\n        minHeight: 100,\r\n        paddingBottom: 0,\r\n        backgroundColor: '#5ecc66',\r\n        '&last-child': {\r\n            paddingBottom: 0,\r\n        }\r\n    },\r\n}));\r\n\r\nfunction Certificates(props) {\r\n    const classes = useStyles();\r\n    const [certificates, setCertificates] = useState(props.certificates);\r\n    const [modalCertificate, setModalCertificate] = useState();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = (param) => {\r\n        setModalCertificate(certificates[param.currentTarget.value]);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCertificates(props.certificates)\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                {certificates && certificates.map((certificate, index) => (\r\n                    <Grid item xs={12} sm={6} lg={2} key={index}>\r\n                        <Button\r\n                            certificate={certificate}\r\n                            index={index}\r\n                            handleOpen={handleOpen}\r\n                        ></Button>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n\r\n            {modalCertificate && \r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        className={classes.modal}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                        timeout: 500,\r\n                        }}\r\n                    >\r\n                        <Fade in={open}>\r\n                            <div className={classes.paper}>\r\n                                {/* STATUS */}\r\n                                <ThemeProvider theme={theme}>\r\n                                    <Typography className={classes.posModal} color=\"textSecondary\" gutterBottom>\r\n                                        Status: {modalCertificate.status}\r\n                                    </Typography>\r\n                                </ThemeProvider>\r\n\r\n                                { /* DATA DE VALIDADE */ }\r\n                                <ThemeProvider theme={theme}>\r\n                                    <Typography className={classes.posModal} color=\"textSecondary\">\r\n                                        Expires on {new Date(parseInt(modalCertificate.expires_on)).toLocaleDateString('en-US')}\r\n                                    </Typography>\r\n                                </ThemeProvider>\r\n\r\n                                { /* DESCRICAO */}\r\n                                <ThemeProvider theme={theme}>\r\n                                    <Typography className={classes.titleModal}>\r\n                                        <strong>{modalCertificate.name}</strong>\r\n                                    </Typography>\r\n                                </ThemeProvider>\r\n                                \r\n                                { /* DOMINIO */ }\r\n                                <ThemeProvider theme={theme}>\r\n                                    <Typography className={classes.posModal} color=\"textSecondary\">\r\n                                        {modalCertificate.domains[0]}\r\n                                    </Typography>\r\n                                </ThemeProvider>\r\n                            </div>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Certificates;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Search from './Search';\nimport ExpiresIn from './ExpiresIn';\nimport {Grid, Button} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/ExitToApp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CertificatesFalconGrid from './CertificatesFalconGrid';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(2),\n    },\n}));\n\nfunction Certificates() {\n    const classes = useStyles();\n    const [certificates, setCertificates] = useState();\n    const [filteredCertificates, setFilteredCertificates] = useState();\n\n    const fetchCertificates = async (year) => {\n        const { data } = await axios.get('/api/certificates');\n\n        if(data){\n            setCertificates(data);\n            setFilteredCertificates(data);\n        }\n    };\n\n    const filterByDays = async (data) => {\n        if (!data.currentTarget.value || data.currentTarget.value === '') {\n            setFilteredCertificates(certificates);\n            return;\n        }\n\n        let hoje = new Date();\n        let dias = parseInt(hoje.getDate()) + parseInt(data.currentTarget.value);\n\n        let dataFiltro = new Date();\n        dataFiltro.setDate(dias);\n\n        const dataEpoch = dataFiltro.getTime();\n\n        setFilteredCertificates( certificates.filter(\n            certificate => certificate.expires_on <= dataEpoch\n        ));\n    };\n\n    const filterByName = async (param) => {\n        setFilteredCertificates( certificates.filter(\n            certificate => certificate.name.toUpperCase().includes(param.target.value.toUpperCase())\n        ));\n    };\n\n    useEffect(() => {\n        fetchCertificates();\n    }, []);\n\n    const logOut = () => {\n        sessionStorage.removeItem('auth');\n        window.location.reload();\n    }\n\n    return (\n        <div>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6} lg={3}>\n                    <ExpiresIn filterByDays={filterByDays}></ExpiresIn>\n                </Grid>\n\n                <Grid item xs={12} sm={6} lg={6}>\n                    <Search filterByName={filterByName}></Search>\n                </Grid>\n                <Grid item xs={12} sm={6} lg={3}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        className={classes.button}\n                        onClick={logOut}\n                    >\n                        Logout\n                    </Button>\n                </Grid>\n            </Grid>\n\n            <CertificatesFalconGrid certificates={filteredCertificates}></CertificatesFalconGrid>\n        </div>\n    );\n}\n\nexport default Certificates;","import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Login from './Components/Login';\nimport Certificates from './Components/Certificates';\n\nfunction App() {\n  const [auth, setAuth] = useState(\n    sessionStorage.getItem('auth') || false\n  );\n\n  useEffect(() => {\n    if(!auth === false){\n      sessionStorage.setItem('auth', auth);\n    }\n  }, [auth]);\n\n  return (\n    auth\n      ? <div className=\"App\">\n          <Router>\n            <Switch>\n              <Route path=\"/\" exact component={Certificates} />\n            </Switch>\n          </Router>\n        </div>\n\n      : <Login setAuth={setAuth}/>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}